---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: curapacs-provisioner-account
automountServiceAccountToken: false
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: curapacs-provisioner-role
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: curapacs-provisioner-binding
subjects:
- kind: ServiceAccount
  name: curapacs-provisioner-account
  namespace: curapacs
roleRef:
  kind: Role
  name: curapacs-provisioner-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: curapacs-provisioner
spec:
  ports:
    - name: provisioner
      protocol: TCP
      port: 8080    
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: curapacs-provisioner
spec:
  rules:
  - host: orthanc.somedomain.ch
    http:
      paths:
      - backend:
          serviceName: curapacs-provisioner
          servicePort: provisioner
        path: /
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: curapacs-provisioner-deployment
spec:
  replicas: 1
  template:
    spec:
      serviceAccountName: curapacs-provisioner-account
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 101
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      initContainers:
        - name: init-fetch-provisioner-source
          image: alpine
          command: ['ash', '-c', 'apk update && apk add --no-cache git && cd /tmp && git clone -b feature/provisioner https://github.com/elly2178/lc2_curapacs.git && cd /tmp/lc2_curapacs/ && cp -r provisioner/provisioner/ kubernetes/ /opt/provisioner ; chown -R 1001 /opt/provisioner && chmod -R 775 /opt/provisioner/provisioner']
          volumeMounts:
            - name: curapacs-provisioner-vol
              mountPath: /opt/provisioner
      containers:
        - name: curapacs-provisioner
          image: dumig1/curapacs-provisioner
          command: ["/bin/bash"]
          args: ["-c", "cd /opt/provisioner/provisioner/; exec gunicorn -w3 run:app"]
          env:
            - name: "GUNICORN_CMD_ARGS"
              value: "--bind=0.0.0.0:8080 --workers=3 --chdir=/opt/provisioner/provisioner/"
            - name: "CURAPACS_K8S_AUTH_FILE"
              value: ""
            - name: "CURAPACS_MANIFESTS_DIR"
              value: "/opt/provisioner/kubernetes/"
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
            - name: curapacs-provisioner-vol
              mountPath: /opt/provisioner
      volumes:
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/Europe/Zurich
        - name: curapacs-provisioner-vol
          emptyDir: {}
